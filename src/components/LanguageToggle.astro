---
import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const otherLang = lang === 'en' ? 'fr' : 'en';

// Get the current path after the language prefix
const pathParts = Astro.url.pathname.split('/').filter(Boolean); // e.g. ['en', 'publications']
let newPath = '';
if (pathParts.length > 1) {
  // e.g. /en/publications -> /fr/publications
  newPath = `/${otherLang}/${pathParts.slice(1).join('/')}`;
} else {
  // e.g. /en/ or /fr/ -> /fr/ or /en/
  newPath = `/${otherLang}/`;
}
---

<div class="language-toggle">
  <a
    href={newPath}
    class="language-toggle-btn"
    aria-label={`Switch to ${lang === 'en' ? 'French' : 'English'}`}
    data-current-lang={lang}
  >
    <div class="icon-container">
      <!-- English flag emoji -->
      <span class="en-icon">ðŸ‡¬ðŸ‡§</span>

      <!-- French flag emoji -->
      <span class="fr-icon">ðŸ‡«ðŸ‡·</span>
    </div>
    <span class="current-lang">{lang === 'en' ? 'EN' : 'FR'}</span>
  </a>
</div>

<style>
  .language-toggle {
    display: inline-block;
  }

  .language-toggle-btn {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1.25rem;
    background: var(--color-bg);
    border: 2px solid var(--color-border);
    border-radius: 50px;
    color: var(--color-text);
    cursor: pointer;
    font-size: 0.9rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-decoration: none;
    font-weight: 500;
    position: relative;
    overflow: hidden;
  }

  .language-toggle-btn:hover {
    background: var(--color-accent);
    color: var(--color-bg);
    border-color: var(--color-accent);
    text-decoration: none;
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .language-toggle-btn:active {
    transform: scale(0.95);
  }

  .icon-container {
    position: relative;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
  }

  .en-icon,
  .fr-icon {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Default state (English page) - show UK flag (current), hide French flag */
  .en-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  .fr-icon {
    opacity: 0;
    transform: rotate(-90deg) scale(0.8);
  }

  /* French language state (French page) - show French flag (current), hide UK flag */
  .language-toggle-btn[data-current-lang='fr'] .en-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0.8);
  }

  .language-toggle-btn[data-current-lang='fr'] .fr-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  /* Smooth background transition */
  .language-toggle-btn {
    background: linear-gradient(
      135deg,
      var(--color-bg) 0%,
      var(--color-bg-secondary, var(--color-bg)) 100%
    );
  }

  /* Add a subtle glow effect */
  .language-toggle-btn::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(
      45deg,
      transparent,
      var(--color-accent),
      transparent
    );
    border-radius: 50px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .language-toggle-btn:hover::before {
    opacity: 0.3;
  }

  .current-lang {
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .language-toggle-btn:hover .current-lang {
    transform: translateX(2px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .language-toggle-btn {
      padding: 0.6rem 1rem;
      gap: 0.5rem;
    }

    .icon-container {
      width: 18px;
      height: 18px;
      font-size: 14px;
    }

    .current-lang {
      font-size: 0.85rem;
    }
  }
</style>

<script>
  // Enhanced language toggle functionality with smooth animations
  function initLanguageToggle() {
    const languageToggle = document.querySelector(
      '.language-toggle-btn'
    ) as HTMLElement;

    if (languageToggle) {
      languageToggle.addEventListener('click', () => {
        // Add a subtle click animation
        languageToggle.style.transform = 'scale(0.95)';
        setTimeout(() => {
          languageToggle.style.transform = '';
        }, 150);
      });
    }
  }

  // Initialize on page load
  if (typeof document !== 'undefined') {
    // Wait for DOM to be ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initLanguageToggle);
    } else {
      initLanguageToggle();
    }
  }
</script>
